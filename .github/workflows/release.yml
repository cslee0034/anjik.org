name: Test and deploy

on:
  push:
    branches:
      - release/*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy pre notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,repo,author
          custom_payload: |
            {
              attachments: [{
                color: 'good',
                text: `${process.env.AS_WORKFLOW} at ${process.env.AS_REPO} by ${process.env.AS_AUTHOR}`,
                fields: [{
                  title: 'starting deploy anjik...',
                  short: false
                }]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract branch name and set as image tag
        id: extract-branch
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/release/}
          echo "IMAGE_TAG=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Replace ECR ID and IMAGE_TAG in Dockerrun.aws.json
        run: |
          sed -i "s#<ECR_ID>#${{ secrets.ECR_ID }}#g" Dockerrun.aws.json
          sed -i "s#<IMAGE_TAG>#${{ env.IMAGE_TAG }}#g" Dockerrun.aws.json

      - name: Extract branch name and set as image tag
        id: extract-branch
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/release/}
          echo "IMAGE_TAG=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_EB_ENVIRONMENT_NAME }}
          region: ap-northeast-2
          version_label: ${{ env.IMAGE_TAG }}
          deployment_package: Dockerrun.aws.json

      - name: Deploy post notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: workflow,repo,author,action,took,pullRequest
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
